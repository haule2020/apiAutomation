[
  {
    "line": 1,
    "elements": [
      {
        "line": 12,
        "name": "Search weather by invalid cityName",
        "description": "",
        "id": "search-weather-by-city-name-and-state-code;search-weather-by-invalid-cityname;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2420003100,
              "status": "passed"
            },
            "line": 8,
            "name": "I search with invalid \"London123\" and \"GB\" and \"b0a9c8b82f8361b93ce4290a8068f35b\"",
            "match": {
              "arguments": [
                {
                  "val": "London123",
                  "offset": 23
                },
                {
                  "val": "GB",
                  "offset": 39
                },
                {
                  "val": "b0a9c8b82f8361b93ce4290a8068f35b",
                  "offset": 48
                }
              ],
              "location": "NegativeSearch.iSearchWithInvalidAndAnd(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1506300,
              "status": "passed"
            },
            "line": 9,
            "name": "Status code response \"404\" should be not found",
            "match": {
              "arguments": [
                {
                  "val": "404",
                  "offset": 22
                }
              ],
              "location": "NegativeSearch.statusCodeResponseShouldBeNotFound(String)"
            },
            "matchedColumns": [
              3
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 13,
        "name": "Search weather by invalid cityName",
        "description": "",
        "id": "search-weather-by-city-name-and-state-code;search-weather-by-invalid-cityname;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 267141300,
              "status": "passed"
            },
            "line": 8,
            "name": "I search with invalid \"123 New york\" and \"US\" and \"b0a9c8b82f8361b93ce4290a8068f35b\"",
            "match": {
              "arguments": [
                {
                  "val": "123 New york",
                  "offset": 23
                },
                {
                  "val": "US",
                  "offset": 42
                },
                {
                  "val": "b0a9c8b82f8361b93ce4290a8068f35b",
                  "offset": 51
                }
              ],
              "location": "NegativeSearch.iSearchWithInvalidAndAnd(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 142400,
              "status": "passed"
            },
            "line": 9,
            "name": "Status code response \"404\" should be not found",
            "match": {
              "arguments": [
                {
                  "val": "404",
                  "offset": 22
                }
              ],
              "location": "NegativeSearch.statusCodeResponseShouldBeNotFound(String)"
            },
            "matchedColumns": [
              3
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 14,
        "name": "Search weather by invalid cityName",
        "description": "",
        "id": "search-weather-by-city-name-and-state-code;search-weather-by-invalid-cityname;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 255797300,
              "status": "passed"
            },
            "line": 8,
            "name": "I search with invalid \"1New york2\" and \"US\" and \"b0a9c8b82f8361b93ce4290a8068f35b\"",
            "match": {
              "arguments": [
                {
                  "val": "1New york2",
                  "offset": 23
                },
                {
                  "val": "US",
                  "offset": 40
                },
                {
                  "val": "b0a9c8b82f8361b93ce4290a8068f35b",
                  "offset": 49
                }
              ],
              "location": "NegativeSearch.iSearchWithInvalidAndAnd(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 142600,
              "status": "passed"
            },
            "line": 9,
            "name": "Status code response \"404\" should be not found",
            "match": {
              "arguments": [
                {
                  "val": "404",
                  "offset": 22
                }
              ],
              "location": "NegativeSearch.statusCodeResponseShouldBeNotFound(String)"
            },
            "matchedColumns": [
              3
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 15,
        "name": "Search weather by invalid cityName",
        "description": "",
        "id": "search-weather-by-city-name-and-state-code;search-weather-by-invalid-cityname;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 270454400,
              "status": "passed"
            },
            "line": 8,
            "name": "I search with invalid \"London%\" and \"US\" and \"b0a9c8b82f8361b93ce4290a8068f35b\"",
            "match": {
              "arguments": [
                {
                  "val": "London%",
                  "offset": 23
                },
                {
                  "val": "US",
                  "offset": 37
                },
                {
                  "val": "b0a9c8b82f8361b93ce4290a8068f35b",
                  "offset": 46
                }
              ],
              "location": "NegativeSearch.iSearchWithInvalidAndAnd(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 102200,
              "status": "passed"
            },
            "line": 9,
            "name": "Status code response \"404\" should be not found",
            "match": {
              "arguments": [
                {
                  "val": "404",
                  "offset": 22
                }
              ],
              "location": "NegativeSearch.statusCodeResponseShouldBeNotFound(String)"
            },
            "matchedColumns": [
              3
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 16,
        "name": "Search weather by invalid cityName",
        "description": "",
        "id": "search-weather-by-city-name-and-state-code;search-weather-by-invalid-cityname;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 293431000,
              "status": "passed"
            },
            "line": 8,
            "name": "I search with invalid \"?\" and \"US\" and \"b0a9c8b82f8361b93ce4290a8068f35b\"",
            "match": {
              "arguments": [
                {
                  "val": "?",
                  "offset": 23
                },
                {
                  "val": "US",
                  "offset": 31
                },
                {
                  "val": "b0a9c8b82f8361b93ce4290a8068f35b",
                  "offset": 40
                }
              ],
              "location": "NegativeSearch.iSearchWithInvalidAndAnd(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 139400,
              "status": "passed"
            },
            "line": 9,
            "name": "Status code response \"404\" should be not found",
            "match": {
              "arguments": [
                {
                  "val": "404",
                  "offset": 22
                }
              ],
              "location": "NegativeSearch.statusCodeResponseShouldBeNotFound(String)"
            },
            "matchedColumns": [
              3
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 17,
        "name": "Search weather by invalid cityName",
        "description": "",
        "id": "search-weather-by-city-name-and-state-code;search-weather-by-invalid-cityname;;7",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 282152600,
              "status": "passed"
            },
            "line": 8,
            "name": "I search with invalid \"%\" and \"US\" and \"b0a9c8b82f8361b93ce4290a8068f35b\"",
            "match": {
              "arguments": [
                {
                  "val": "%",
                  "offset": 23
                },
                {
                  "val": "US",
                  "offset": 31
                },
                {
                  "val": "b0a9c8b82f8361b93ce4290a8068f35b",
                  "offset": 40
                }
              ],
              "location": "NegativeSearch.iSearchWithInvalidAndAnd(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 50600,
              "status": "passed"
            },
            "line": 9,
            "name": "Status code response \"404\" should be not found",
            "match": {
              "arguments": [
                {
                  "val": "404",
                  "offset": 22
                }
              ],
              "location": "NegativeSearch.statusCodeResponseShouldBeNotFound(String)"
            },
            "matchedColumns": [
              3
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 18,
        "name": "Search weather by invalid cityName",
        "description": "",
        "id": "search-weather-by-city-name-and-state-code;search-weather-by-invalid-cityname;;8",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 279143000,
              "status": "passed"
            },
            "line": 8,
            "name": "I search with invalid \"\" and \"US\" and \"b0a9c8b82f8361b93ce4290a8068f35b\"",
            "match": {
              "arguments": [
                {
                  "val": "",
                  "offset": 23
                },
                {
                  "val": "US",
                  "offset": 30
                },
                {
                  "val": "b0a9c8b82f8361b93ce4290a8068f35b",
                  "offset": 39
                }
              ],
              "location": "NegativeSearch.iSearchWithInvalidAndAnd(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 970700,
              "error_message": "java.lang.AssertionError: expected:\u003c404\u003e but was:\u003c200\u003e\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:834)\r\n\tat org.junit.Assert.assertEquals(Assert.java:645)\r\n\tat org.junit.Assert.assertEquals(Assert.java:631)\r\n\tat stepDefinitions.NegativeSearch.statusCodeResponseShouldBeNotFound(NegativeSearch.java:27)\r\n\tat ✽.Then Status code response \"404\" should be not found(src/test/resources/searchWeatherCity.feature:9)\r\n",
              "status": "failed"
            },
            "line": 9,
            "name": "Status code response \"404\" should be not found",
            "match": {
              "arguments": [
                {
                  "val": "404",
                  "offset": 22
                }
              ],
              "location": "NegativeSearch.statusCodeResponseShouldBeNotFound(String)"
            },
            "matchedColumns": [
              3
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 26,
        "name": "Search weather with invalid State code",
        "description": "",
        "id": "search-weather-by-city-name-and-state-code;search-weather-with-invalid-state-code;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 263964700,
              "status": "passed"
            },
            "line": 21,
            "name": "I search with \"London\" and \"London\" and invalid State code \"b0a9c8b82f8361b93ce4290a8068f35b\"",
            "match": {
              "arguments": [
                {
                  "val": "London",
                  "offset": 15
                },
                {
                  "val": "London",
                  "offset": 28
                },
                {
                  "val": "b0a9c8b82f8361b93ce4290a8068f35b",
                  "offset": 60
                }
              ],
              "location": "NegativeSearch.iSearchWithAndAndInvalidStateCode(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 207400,
              "error_message": "java.lang.AssertionError: expected:\u003c404\u003e but was:\u003c200\u003e\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:834)\r\n\tat org.junit.Assert.assertEquals(Assert.java:645)\r\n\tat org.junit.Assert.assertEquals(Assert.java:631)\r\n\tat stepDefinitions.NegativeSearch.statusCodeResponseShouldBe(NegativeSearch.java:38)\r\n\tat ✽.Then Status code response should be \"404\"(src/test/resources/searchWeatherCity.feature:22)\r\n",
              "status": "failed"
            },
            "line": 22,
            "name": "Status code response should be \"404\"",
            "match": {
              "arguments": [
                {
                  "val": "404",
                  "offset": 32
                }
              ],
              "location": "NegativeSearch.statusCodeResponseShouldBe(String)"
            },
            "matchedColumns": [
              3
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 27,
        "name": "Search weather with invalid State code",
        "description": "",
        "id": "search-weather-by-city-name-and-state-code;search-weather-with-invalid-state-code;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 248698500,
              "status": "passed"
            },
            "line": 21,
            "name": "I search with \"New york\" and \"GB\" and invalid State code \"b0a9c8b82f8361b93ce4290a8068f35b\"",
            "match": {
              "arguments": [
                {
                  "val": "New york",
                  "offset": 15
                },
                {
                  "val": "GB",
                  "offset": 30
                },
                {
                  "val": "b0a9c8b82f8361b93ce4290a8068f35b",
                  "offset": 58
                }
              ],
              "location": "NegativeSearch.iSearchWithAndAndInvalidStateCode(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 264300,
              "error_message": "java.lang.AssertionError: expected:\u003c404\u003e but was:\u003c200\u003e\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:834)\r\n\tat org.junit.Assert.assertEquals(Assert.java:645)\r\n\tat org.junit.Assert.assertEquals(Assert.java:631)\r\n\tat stepDefinitions.NegativeSearch.statusCodeResponseShouldBe(NegativeSearch.java:38)\r\n\tat ✽.Then Status code response should be \"404\"(src/test/resources/searchWeatherCity.feature:22)\r\n",
              "status": "failed"
            },
            "line": 22,
            "name": "Status code response should be \"404\"",
            "match": {
              "arguments": [
                {
                  "val": "404",
                  "offset": 32
                }
              ],
              "location": "NegativeSearch.statusCodeResponseShouldBe(String)"
            },
            "matchedColumns": [
              3
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 28,
        "name": "Search weather with invalid State code",
        "description": "",
        "id": "search-weather-by-city-name-and-state-code;search-weather-with-invalid-state-code;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 288331100,
              "status": "passed"
            },
            "line": 21,
            "name": "I search with \"New york\" and \"VN\" and invalid State code \"b0a9c8b82f8361b93ce4290a8068f35b\"",
            "match": {
              "arguments": [
                {
                  "val": "New york",
                  "offset": 15
                },
                {
                  "val": "VN",
                  "offset": 30
                },
                {
                  "val": "b0a9c8b82f8361b93ce4290a8068f35b",
                  "offset": 58
                }
              ],
              "location": "NegativeSearch.iSearchWithAndAndInvalidStateCode(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 132600,
              "status": "passed"
            },
            "line": 22,
            "name": "Status code response should be \"404\"",
            "match": {
              "arguments": [
                {
                  "val": "404",
                  "offset": 32
                }
              ],
              "location": "NegativeSearch.statusCodeResponseShouldBe(String)"
            },
            "matchedColumns": [
              3
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 29,
        "name": "Search weather with invalid State code",
        "description": "",
        "id": "search-weather-by-city-name-and-state-code;search-weather-with-invalid-state-code;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 281257200,
              "status": "passed"
            },
            "line": 21,
            "name": "I search with \"London\" and \"GB%%\" and invalid State code \"b0a9c8b82f8361b93ce4290a8068f35b\"",
            "match": {
              "arguments": [
                {
                  "val": "London",
                  "offset": 15
                },
                {
                  "val": "GB%%",
                  "offset": 28
                },
                {
                  "val": "b0a9c8b82f8361b93ce4290a8068f35b",
                  "offset": 58
                }
              ],
              "location": "NegativeSearch.iSearchWithAndAndInvalidStateCode(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 484700,
              "error_message": "java.lang.AssertionError: expected:\u003c404\u003e but was:\u003c200\u003e\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:834)\r\n\tat org.junit.Assert.assertEquals(Assert.java:645)\r\n\tat org.junit.Assert.assertEquals(Assert.java:631)\r\n\tat stepDefinitions.NegativeSearch.statusCodeResponseShouldBe(NegativeSearch.java:38)\r\n\tat ✽.Then Status code response should be \"404\"(src/test/resources/searchWeatherCity.feature:22)\r\n",
              "status": "failed"
            },
            "line": 22,
            "name": "Status code response should be \"404\"",
            "match": {
              "arguments": [
                {
                  "val": "404",
                  "offset": 32
                }
              ],
              "location": "NegativeSearch.statusCodeResponseShouldBe(String)"
            },
            "matchedColumns": [
              3
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 30,
        "name": "Search weather with invalid State code",
        "description": "",
        "id": "search-weather-by-city-name-and-state-code;search-weather-with-invalid-state-code;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 279195100,
              "status": "passed"
            },
            "line": 21,
            "name": "I search with \"London\" and \"CAN\" and invalid State code \"b0a9c8b82f8361b93ce4290a8068f35b\"",
            "match": {
              "arguments": [
                {
                  "val": "London",
                  "offset": 15
                },
                {
                  "val": "CAN",
                  "offset": 28
                },
                {
                  "val": "b0a9c8b82f8361b93ce4290a8068f35b",
                  "offset": 57
                }
              ],
              "location": "NegativeSearch.iSearchWithAndAndInvalidStateCode(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 566400,
              "error_message": "java.lang.AssertionError: expected:\u003c404\u003e but was:\u003c200\u003e\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:834)\r\n\tat org.junit.Assert.assertEquals(Assert.java:645)\r\n\tat org.junit.Assert.assertEquals(Assert.java:631)\r\n\tat stepDefinitions.NegativeSearch.statusCodeResponseShouldBe(NegativeSearch.java:38)\r\n\tat ✽.Then Status code response should be \"404\"(src/test/resources/searchWeatherCity.feature:22)\r\n",
              "status": "failed"
            },
            "line": 22,
            "name": "Status code response should be \"404\"",
            "match": {
              "arguments": [
                {
                  "val": "404",
                  "offset": 32
                }
              ],
              "location": "NegativeSearch.statusCodeResponseShouldBe(String)"
            },
            "matchedColumns": [
              3
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 31,
        "name": "Search weather with invalid State code",
        "description": "",
        "id": "search-weather-by-city-name-and-state-code;search-weather-with-invalid-state-code;;7",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 242707000,
              "status": "passed"
            },
            "line": 21,
            "name": "I search with \"London\" and \"\" and invalid State code \"b0a9c8b82f8361b93ce4290a8068f35b\"",
            "match": {
              "arguments": [
                {
                  "val": "London",
                  "offset": 15
                },
                {
                  "val": "",
                  "offset": 28
                },
                {
                  "val": "b0a9c8b82f8361b93ce4290a8068f35b",
                  "offset": 54
                }
              ],
              "location": "NegativeSearch.iSearchWithAndAndInvalidStateCode(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 409500,
              "error_message": "java.lang.AssertionError: expected:\u003c404\u003e but was:\u003c200\u003e\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:834)\r\n\tat org.junit.Assert.assertEquals(Assert.java:645)\r\n\tat org.junit.Assert.assertEquals(Assert.java:631)\r\n\tat stepDefinitions.NegativeSearch.statusCodeResponseShouldBe(NegativeSearch.java:38)\r\n\tat ✽.Then Status code response should be \"404\"(src/test/resources/searchWeatherCity.feature:22)\r\n",
              "status": "failed"
            },
            "line": 22,
            "name": "Status code response should be \"404\"",
            "match": {
              "arguments": [
                {
                  "val": "404",
                  "offset": 32
                }
              ],
              "location": "NegativeSearch.statusCodeResponseShouldBe(String)"
            },
            "matchedColumns": [
              3
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 40,
        "name": "Search weather with invalid apiKey",
        "description": "",
        "id": "search-weather-by-city-name-and-state-code;search-weather-with-invalid-apikey;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 326329500,
              "status": "passed"
            },
            "line": 35,
            "name": "I search with \"London\" and State code \"GB\" and invalid \"wert\"",
            "match": {
              "arguments": [
                {
                  "val": "London",
                  "offset": 15
                },
                {
                  "val": "GB",
                  "offset": 39
                },
                {
                  "val": "wert",
                  "offset": 56
                }
              ],
              "location": "NegativeSearch.iSearchWithAndStateCodeAndInvalid(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 160000,
              "status": "passed"
            },
            "line": 36,
            "name": "Status code response should be \"401\" authentication failed",
            "match": {
              "arguments": [
                {
                  "val": "401",
                  "offset": 32
                }
              ],
              "location": "NegativeSearch.statusCodeResponseShouldBeAuthenticationFailed(String)"
            },
            "matchedColumns": [
              3
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 41,
        "name": "Search weather with invalid apiKey",
        "description": "",
        "id": "search-weather-by-city-name-and-state-code;search-weather-with-invalid-apikey;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 264678500,
              "status": "passed"
            },
            "line": 35,
            "name": "I search with \"New york\" and State code \"US\" and invalid \"\"",
            "match": {
              "arguments": [
                {
                  "val": "New york",
                  "offset": 15
                },
                {
                  "val": "US",
                  "offset": 41
                },
                {
                  "val": "",
                  "offset": 58
                }
              ],
              "location": "NegativeSearch.iSearchWithAndStateCodeAndInvalid(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 78200,
              "status": "passed"
            },
            "line": 36,
            "name": "Status code response should be \"401\" authentication failed",
            "match": {
              "arguments": [
                {
                  "val": "401",
                  "offset": 32
                }
              ],
              "location": "NegativeSearch.statusCodeResponseShouldBeAuthenticationFailed(String)"
            },
            "matchedColumns": [
              3
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 50,
        "name": "Search weather by valid parameters with GET method",
        "description": "",
        "id": "search-weather-by-city-name-and-state-code;search-weather-by-valid-parameters-with-get-method;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 279684100,
              "status": "passed"
            },
            "line": 45,
            "name": "I search with valid parameters \"London\" , \"GB\" , \"b0a9c8b82f8361b93ce4290a8068f35b\"",
            "match": {
              "arguments": [
                {
                  "val": "London",
                  "offset": 32
                },
                {
                  "val": "GB",
                  "offset": 43
                },
                {
                  "val": "b0a9c8b82f8361b93ce4290a8068f35b",
                  "offset": 50
                }
              ],
              "location": "SearchByValidParameters.iSearchWithValidParameters(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 212700,
              "status": "passed"
            },
            "line": 46,
            "name": "I can search successfully with status code \"200\"",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 44
                }
              ],
              "location": "SearchByValidParameters.iCanSearchSuccessfullyWithStatusCode(String)"
            },
            "matchedColumns": [
              3
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 51,
        "name": "Search weather by valid parameters with GET method",
        "description": "",
        "id": "search-weather-by-city-name-and-state-code;search-weather-by-valid-parameters-with-get-method;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 256976700,
              "status": "passed"
            },
            "line": 45,
            "name": "I search with valid parameters \"New york\" , \"US\" , \"b0a9c8b82f8361b93ce4290a8068f35b\"",
            "match": {
              "arguments": [
                {
                  "val": "New york",
                  "offset": 32
                },
                {
                  "val": "US",
                  "offset": 45
                },
                {
                  "val": "b0a9c8b82f8361b93ce4290a8068f35b",
                  "offset": 52
                }
              ],
              "location": "SearchByValidParameters.iSearchWithValidParameters(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 143600,
              "status": "passed"
            },
            "line": 46,
            "name": "I can search successfully with status code \"200\"",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 44
                }
              ],
              "location": "SearchByValidParameters.iCanSearchSuccessfullyWithStatusCode(String)"
            },
            "matchedColumns": [
              3
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 69,
        "name": "Verify schemas and data type in response body",
        "description": "",
        "id": "search-weather-by-city-name-and-state-code;verify-schemas-and-data-type-in-response-body;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 366520600,
              "status": "passed"
            },
            "line": 55,
            "name": "I performed search with valid parameters \"London\" , \"GB\" , \"b0a9c8b82f8361b93ce4290a8068f35b\"",
            "match": {
              "arguments": [
                {
                  "val": "London",
                  "offset": 42
                },
                {
                  "val": "GB",
                  "offset": 53
                },
                {
                  "val": "b0a9c8b82f8361b93ce4290a8068f35b",
                  "offset": 60
                }
              ],
              "location": "VerifyResonseData.iPerformedSearchWithValidParameters(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 336265600,
              "status": "passed"
            },
            "line": 56,
            "name": "I can get correct response fields",
            "match": {
              "location": "VerifyResonseData.i_can_get_correct_response_fields()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 47700,
              "status": "passed"
            },
            "line": 57,
            "name": "get the data in COORD field",
            "match": {
              "location": "VerifyResonseData.get_the_data_in_COORD_field()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 46400,
              "status": "passed"
            },
            "line": 58,
            "name": "get the data in WEATHER field",
            "match": {
              "location": "VerifyResonseData.get_the_data_in_WEATHER_field()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 25100,
              "status": "passed"
            },
            "line": 59,
            "name": "get the data in BASE field",
            "match": {
              "location": "VerifyResonseData.get_the_data_in_BASE_field()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 46200,
              "status": "passed"
            },
            "line": 60,
            "name": "get the data in MAIN field",
            "match": {
              "location": "VerifyResonseData.get_the_data_in_MAIN_field()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 56600,
              "status": "passed"
            },
            "line": 61,
            "name": "get the data in VISIBILITY field",
            "match": {
              "location": "VerifyResonseData.get_the_data_in_VISIBILITY_field()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 32000,
              "status": "passed"
            },
            "line": 62,
            "name": "get the data in CLOUDS field",
            "match": {
              "location": "VerifyResonseData.get_the_data_in_CLOUDS_field()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 82400,
              "status": "passed"
            },
            "line": 63,
            "name": "get the valid country code in SYS field \"GB\"",
            "match": {
              "arguments": [
                {
                  "val": "GB",
                  "offset": 41
                }
              ],
              "location": "VerifyResonseData.getTheValidCountryCodeInSYSField(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 27200,
              "status": "passed"
            },
            "line": 64,
            "name": "I check data in NAME field",
            "match": {
              "location": "VerifyResonseData.i_check_data_in_NAME_field()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 64200,
              "status": "passed"
            },
            "line": 65,
            "name": "NAME value should be semilar to the CityName parameter \"London\"",
            "match": {
              "arguments": [
                {
                  "val": "London",
                  "offset": 56
                }
              ],
              "location": "VerifyResonseData.nameValueShouldBeSemilarToTheCityNameParameter(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 70,
        "name": "Verify schemas and data type in response body",
        "description": "",
        "id": "search-weather-by-city-name-and-state-code;verify-schemas-and-data-type-in-response-body;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 276948900,
              "status": "passed"
            },
            "line": 55,
            "name": "I performed search with valid parameters \"New york\" , \"US\" , \"b0a9c8b82f8361b93ce4290a8068f35b\"",
            "match": {
              "arguments": [
                {
                  "val": "New york",
                  "offset": 42
                },
                {
                  "val": "US",
                  "offset": 55
                },
                {
                  "val": "b0a9c8b82f8361b93ce4290a8068f35b",
                  "offset": 62
                }
              ],
              "location": "VerifyResonseData.iPerformedSearchWithValidParameters(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4109500,
              "status": "passed"
            },
            "line": 56,
            "name": "I can get correct response fields",
            "match": {
              "location": "VerifyResonseData.i_can_get_correct_response_fields()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 26900,
              "status": "passed"
            },
            "line": 57,
            "name": "get the data in COORD field",
            "match": {
              "location": "VerifyResonseData.get_the_data_in_COORD_field()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 33300,
              "status": "passed"
            },
            "line": 58,
            "name": "get the data in WEATHER field",
            "match": {
              "location": "VerifyResonseData.get_the_data_in_WEATHER_field()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13700,
              "status": "passed"
            },
            "line": 59,
            "name": "get the data in BASE field",
            "match": {
              "location": "VerifyResonseData.get_the_data_in_BASE_field()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15400,
              "status": "passed"
            },
            "line": 60,
            "name": "get the data in MAIN field",
            "match": {
              "location": "VerifyResonseData.get_the_data_in_MAIN_field()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22200,
              "status": "passed"
            },
            "line": 61,
            "name": "get the data in VISIBILITY field",
            "match": {
              "location": "VerifyResonseData.get_the_data_in_VISIBILITY_field()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18900,
              "status": "passed"
            },
            "line": 62,
            "name": "get the data in CLOUDS field",
            "match": {
              "location": "VerifyResonseData.get_the_data_in_CLOUDS_field()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 41600,
              "status": "passed"
            },
            "line": 63,
            "name": "get the valid country code in SYS field \"US\"",
            "match": {
              "arguments": [
                {
                  "val": "US",
                  "offset": 41
                }
              ],
              "location": "VerifyResonseData.getTheValidCountryCodeInSYSField(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 27100,
              "status": "passed"
            },
            "line": 64,
            "name": "I check data in NAME field",
            "match": {
              "location": "VerifyResonseData.i_check_data_in_NAME_field()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 69400,
              "status": "passed"
            },
            "line": 65,
            "name": "NAME value should be semilar to the CityName parameter \"New york\"",
            "match": {
              "arguments": [
                {
                  "val": "New york",
                  "offset": 56
                }
              ],
              "location": "VerifyResonseData.nameValueShouldBeSemilarToTheCityNameParameter(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 80,
        "name": "Verify response time",
        "description": "",
        "id": "search-weather-by-city-name-and-state-code;verify-response-time;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 291602700,
              "status": "passed"
            },
            "line": 75,
            "name": "I call the API with parameters \"London\" , \"GB\" , \"b0a9c8b82f8361b93ce4290a8068f35b\"",
            "match": {
              "arguments": [
                {
                  "val": "London",
                  "offset": 32
                },
                {
                  "val": "GB",
                  "offset": 43
                },
                {
                  "val": "b0a9c8b82f8361b93ce4290a8068f35b",
                  "offset": 50
                }
              ],
              "location": "CheckResponseTime.iCallTheAPIWithParameters(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 158400,
              "status": "passed"
            },
            "line": 76,
            "name": "response time should not exceed \"9000\" miliseconds",
            "match": {
              "arguments": [
                {
                  "val": "9000",
                  "offset": 33
                }
              ],
              "location": "CheckResponseTime.responseTimeShouldNotExceedMiliseconds(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 81,
        "name": "Verify response time",
        "description": "",
        "id": "search-weather-by-city-name-and-state-code;verify-response-time;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 277652700,
              "status": "passed"
            },
            "line": 75,
            "name": "I call the API with parameters \"New york\" , \"US\" , \"b0a9c8b82f8361b93ce4290a8068f35b\"",
            "match": {
              "arguments": [
                {
                  "val": "New york",
                  "offset": 32
                },
                {
                  "val": "US",
                  "offset": 45
                },
                {
                  "val": "b0a9c8b82f8361b93ce4290a8068f35b",
                  "offset": 52
                }
              ],
              "location": "CheckResponseTime.iCallTheAPIWithParameters(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 141400,
              "status": "passed"
            },
            "line": 76,
            "name": "response time should not exceed \"9000\" miliseconds",
            "match": {
              "arguments": [
                {
                  "val": "9000",
                  "offset": 33
                }
              ],
              "location": "CheckResponseTime.responseTimeShouldNotExceedMiliseconds(String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Search weather by City Name and State code",
    "description": "\nDescription: When I search a city by inputing city name and State code as below format:\napi.openweathermap.org/data/2.5/weather?q\u003d{city name},{state code}\u0026appid\u003d{API key},\nI want to get weather information response of that city",
    "id": "search-weather-by-city-name-and-state-code",
    "keyword": "Feature",
    "uri": "src/test/resources/searchWeatherCity.feature"
  }
]