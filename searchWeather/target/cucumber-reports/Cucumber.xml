<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<testsuite failures="2" name="cucumber.runtime.formatter.JUnitFormatter" skipped="0" tests="9" time="4.93544">
<testcase classname="Search weather by City Name and State code" name="Search weather by invalid City name" time="2.565714">
<system-out><![CDATA[Given I search with invalid City name.......................................passed
Then Status code response should be "404" not found.........................passed
]]></system-out>
</testcase>
<testcase classname="Search weather by City Name and State code" name="Search weather by iunputing state code, APi key but City name is blank" time="0.314353">
<failure message="java.lang.AssertionError: Values should be different. Actual: 200&#13;&#10;&#9;at org.junit.Assert.fail(Assert.java:88)&#13;&#10;&#9;at org.junit.Assert.failEquals(Assert.java:185)&#13;&#10;&#9;at org.junit.Assert.assertNotEquals(Assert.java:199)&#13;&#10;&#9;at org.junit.Assert.assertNotEquals(Assert.java:211)&#13;&#10;&#9;at stepDefinitions.NegativeSearch.status_code_response_should_not_be(NegativeSearch.java:39)&#13;&#10;&#9;at ✽.Then Status code response should not be &quot;200&quot;(resources/Feature/searchWeatherCity.feature:13)&#13;&#10;"><![CDATA[Given I search with state code , APi key but City name is blank.............passed
Then Status code response should not be "200"...............................failed

StackTrace:
java.lang.AssertionError: Values should be different. Actual: 200
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failEquals(Assert.java:185)
	at org.junit.Assert.assertNotEquals(Assert.java:199)
	at org.junit.Assert.assertNotEquals(Assert.java:211)
	at stepDefinitions.NegativeSearch.status_code_response_should_not_be(NegativeSearch.java:39)
	at ✽.Then Status code response should not be "200"(resources/Feature/searchWeatherCity.feature:13)
]]></failure>
</testcase>
<testcase classname="Search weather by City Name and State code" name="Search weather by valid City name and invalid State code" time="0.288488">
<failure message="java.lang.AssertionError: expected:&lt;404&gt; but was:&lt;200&gt;&#13;&#10;&#9;at org.junit.Assert.fail(Assert.java:88)&#13;&#10;&#9;at org.junit.Assert.failNotEquals(Assert.java:834)&#13;&#10;&#9;at org.junit.Assert.assertEquals(Assert.java:645)&#13;&#10;&#9;at org.junit.Assert.assertEquals(Assert.java:631)&#13;&#10;&#9;at stepDefinitions.NegativeSearch.status_code_response_should_be(NegativeSearch.java:52)&#13;&#10;&#9;at ✽.Then Status code response should be &quot;404&quot;(resources/Feature/searchWeatherCity.feature:17)&#13;&#10;"><![CDATA[Given I search with valid City name and invalid State code..................passed
Then Status code response should be "404"...................................failed

StackTrace:
java.lang.AssertionError: expected:<404> but was:<200>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:834)
	at org.junit.Assert.assertEquals(Assert.java:645)
	at org.junit.Assert.assertEquals(Assert.java:631)
	at stepDefinitions.NegativeSearch.status_code_response_should_be(NegativeSearch.java:52)
	at ✽.Then Status code response should be "404"(resources/Feature/searchWeatherCity.feature:17)
]]></failure>
</testcase>
<testcase classname="Search weather by City Name and State code" name="Search weather by valid city name and invalid API key" time="0.265112">
<system-out><![CDATA[When I search with valid City name and invalid API key......................passed
Then I should get respose code "401"........................................passed
]]></system-out>
</testcase>
<testcase classname="Search weather by City Name and State code" name="Search weather by valid parameters with GET method" time="0.219013">
<system-out><![CDATA[When I search with valid parameters.........................................passed
Then I can search successfully with status code "200".......................passed
]]></system-out>
</testcase>
<testcase classname="Search weather by City Name and State code" name="Search weather with POST method" time="0.00091">
<system-out><![CDATA[When I search with with POST method.........................................passed
Then API called successfully................................................passed
]]></system-out>
</testcase>
<testcase classname="Search weather by City Name and State code" name="Verify header" time="0.308466">
<system-out><![CDATA[Given I call API successfully...............................................passed
Then response header with correct content type "application/json; charset=utf-8".passed
And response header with correct server name "openresty"....................passed
]]></system-out>
</testcase>
<testcase classname="Search weather by City Name and State code" name="Verify schemas and data type in response body" time="0.706175">
<system-out><![CDATA[Given I performed search city successfully with status code "200"...........passed
Then I can get correct response fields......................................passed
And get the data in COORD field.............................................passed
And get the data in WEATHER field...........................................passed
And get the data in BASE field..............................................passed
And get the data in MAIN field..............................................passed
And get the data in VISIBILITY field........................................passed
And get the data in CLOUDS field............................................passed
And get the valid country code in SYS field.................................passed
When I check data in NAME field.............................................passed
Then NAME value should be semilar to the CityName parameter.................passed
]]></system-out>
</testcase>
<testcase classname="Search weather by City Name and State code" name="Verify response time" time="0.267209">
<system-out><![CDATA[Given I call the API........................................................passed
Then response time should not exceed "9000" miliseconds.....................passed
]]></system-out>
</testcase>
</testsuite>
